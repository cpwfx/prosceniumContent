<languageVersion: 1.0;>
material kernel simpleImageSampling
<
	namespace:	"Pixel Bender 3D";
	vendor:		"Adobe";
	version:	1;
>
{
	parameter float4 lightDiffuse
	<
		id: "lightDiffuse";
	>;
	parameter float4 lightSpecular
	<
		id: "lightSpecular";
	>;
	parameter float shininess
	<
		id: "shininess";
	>;
	
	input vertex float4 vertexPosition < id:"position"; >;
	input vertex float4 vertexTexcoord < id:"texcoord"; >;
	input vertex float4 vertexNormal < id:"normal"; >;
	input image4 inputImage < id:"diffuseTexture"; >;

	interpolated float4 texcoord;
	interpolated float4 normal;


	output float4 result;
	
	void evaluateVertex()
	{
		texcoord = vertexTexcoord;
		normal = vertexNormal;
	}
	
	void evaluateFragment()
	{
		float4 color = sample( inputImage, float2( texcoord.x, texcoord.y ) );
		result = color + texcoord * float4( .25, .5, .75, 1. );
	}
}