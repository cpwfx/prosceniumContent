module_fragment_program phong

    metadata
        namespace const(string, "AIF Test")
        vendor const(string, "Adobe")
        version const(int, 1)
    end_metadata
    
    transformations
        SCF INTOSSA OPT(DCE* {APR DCE*}*)
    end_transformations
    
    globals
        global parameter float-4 cameraPosition
            metadata
                id const(string, "cameraPosition")
            end_metadata
        global parameter float-4 diffuse
            metadata
                id const(string, "diffuse")
            end_metadata
        global parameter float-4 lightPosition
            metadata
                id const(string, "lightPosition")
            end_metadata
        global parameter float shininess
            metadata
                id const(string, "shininess")
            end_metadata
        global parameter float-4 specular
            metadata
                id const(string, "specular")
            end_metadata
        input vertex float-4 vertexNormal
            metadata
                id const(string, "normal")
            end_metadata
        input vertex float-4 vertexPosition
            metadata
                id const(string, "position")
            end_metadata
        input vertex float-4 vertexTexcoord
            metadata
                id const(string, "texcoord")
            end_metadata
        interpolated float-4 normal
            metadata
                id const(string, "_1_normal")
            end_metadata
        interpolated float-4 texcoord
            metadata
                id const(string, "_0_texcoord")
            end_metadata
        interpolated float-4 worldPosition
            metadata
                id const(string, "_2_worldPosition")
            end_metadata
        output fragment float-4 result
    end_globals
    
    functions
        function float-4 evaluateLitPhong_vf4_vf4_vf4_vf4_vf4_(in float-4 position-0,
                                                               in float-4 surfaceNormal-0,
                                                               in float-4 rayDirection-0,
                                                               in float-4 diffuseColor-0,
                                                               in float-4 specularColor-0)
            body
                basic_block entry%A !! outlets(basic%A)
                    _returnVal-0 = allocNonSSA type(float-4) : float-4
                    direction-0 = allocNonSSA type(float-4) : float-4
                    dotProduct-0 = allocNonSSA type(float) : float
                    dpHighlight-0 = allocNonSSA type(float) : float
                    jump block(basic%A) : void
                end_basic_block
                basic_block basic%A !! inlets(entry%A) outlets(exit%A)
                    _LD_direction-1 = sub lightPosition, position-0 : float-4
                    _LD_direction-2 = normalize _LD_direction-1 : float-4
                    _LD_dotProduct-1 = dot normal, _LD_direction-2 : float
                    _LD_dotProduct-2 = max const(float, 0), _LD_dotProduct-1 : float
                    _LD_dpHighlight-1 = dot rayDirection-0, _LD_direction-2 : float
                    _LD_dpHighlight-2 = max const(float, 0), _LD_dpHighlight-1 : float
                    _LD_dpHighlight-3 = pow _LD_dpHighlight-2, shininess : float
                    _mulResult%A-0 = mul _LD_dpHighlight-3, specularColor-0 : float-4
                    _mulResult%B-0 = mul _LD_dotProduct-2, diffuseColor-0 : float-4
                    _addResult%A-0 = add _mulResult%A-0, _mulResult%B-0 : float-4
                    _LD__returnVal-1 = assign _addResult%A-0 : float-4
                    interiorReturn _addResult%A-0 : void
                    jump block(exit%A) : void
                end_basic_block
                basic_block exit%A !! inlets(basic%A)
                    ret _LD__returnVal-1 : void
                end_basic_block
            end_body
        end_function
        external_function void evaluateFragment()
            body
                basic_block entry%A !! outlets(basic%A)
                    viewDirection-0 = allocNonSSA type(float-4) : float-4
                    surfacePosition-0 = allocNonSSA type(float-4) : float-4
                    surfaceNormal-0 = allocNonSSA type(float-4) : float-4
                    diffuseColor-0 = allocNonSSA type(float-4) : float-4
                    specularColor-0 = allocNonSSA type(float-4) : float-4
                    reflectedRay-0 = allocNonSSA type(float-4) : float-4
                    colorValue-0 = allocNonSSA type(float-4) : float-4
                    jump block(basic%A) : void
                end_basic_block
                basic_block basic%A !! inlets(entry%A) outlets(exit%A)
                    _LD_viewDirection-1 = sub worldPosition, cameraPosition : float-4
                    _LD_viewDirection-2 = normalize _LD_viewDirection-1 : float-4
                    _LD_surfacePosition-1 = assign worldPosition : float-4
                    _LD_surfaceNormal-1 = assign normal : float-4
                    _LD_diffuseColor-1 = assign diffuse : float-4
                    _LD_specularColor-1 = assign specular : float-4
                    _dotResult%A-0 = dot _LD_viewDirection-2, normal : float
                    _mulResult%A-0 = mul const(float, 2), _dotResult%A-0 : float
                    _mulResult%B-0 = mul _mulResult%A-0, normal : float-4
                    _LD_reflectedRay-1 = sub _LD_viewDirection-2, _mulResult%B-0 : float-4
                    _LD_colorValue-1 = call function(evaluateLitPhong_vf4_vf4_vf4_vf4_vf4_), _LD_surfacePosition-1, _LD_surfaceNormal-1, _LD_reflectedRay-1, _LD_diffuseColor-1, _LD_specularColor-1 : float-4
                    _LD_colorValueElem%A-0 = extractVE _LD_colorValue-1, const(int, 0) : float
                    _LD_colorValueElem%B-0 = extractVE _LD_colorValue-1, const(int, 1) : float
                    _LD_colorValueElem%C-0 = extractVE _LD_colorValue-1, const(int, 2) : float
                    _LD_result-1 = makeFloatVector _LD_colorValueElem%A-0, _LD_colorValueElem%B-0, _LD_colorValueElem%C-0, const(float, 1) : float-4
                    jump block(exit%A) : void
                end_basic_block
                basic_block exit%A !! inlets(basic%A)
                    moveToNonSSA _LD_result-1, result : void
                    ret : void
                end_basic_block
            end_body
        end_external_function
    end_functions
    
end_module_fragment_program

